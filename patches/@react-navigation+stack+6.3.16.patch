diff --git a/node_modules/@react-navigation/stack/lib/module/utils/edgeDragGestureMonitor.js b/node_modules/@react-navigation/stack/lib/module/utils/edgeDragGestureMonitor.js
new file mode 100644
index 0000000..bdf86fc
--- /dev/null
+++ b/node_modules/@react-navigation/stack/lib/module/utils/edgeDragGestureMonitor.js
@@ -0,0 +1,46 @@
+let isInitialized = false;
+let justFinishedEdgeGestureFromLeft = false;
+let expectingTouchend = false;
+
+/// This returns information if the user just performed edge gesture on iOS safari to navigate in the browser history.
+export const getIsEdgeDragGesture = () => {
+  return expectingTouchend || justFinishedEdgeGestureFromLeft;
+};
+
+// We need to manualy reset this flag after deciding if there should be animation for navigation.
+export const resetExpectingTouchendWithDelay = () => {
+  setTimeout(() => {
+    expectingTouchend = false;
+  }, 100);
+};
+
+export const maybeInitializeEdgeDragGestureMonitor = () => {
+  if (isInitialized) {
+    return;
+  }
+  isInitialized = true;
+  let timer;
+
+  // Gestures that would trigger navigation forward are broken on iOS safari. 
+  // They don't have touchend event fired so we can look at expectingTouchEnd flag to detect if we should run animation. 
+  const handleTouchStart = () => {
+    expectingTouchend = true;
+  };
+  const handleTouchEnd = e => {
+    var _e$changedTouches$;
+    const pageX = (_e$changedTouches$ = e.changedTouches[0]) === null || _e$changedTouches$ === void 0 ? void 0 : _e$changedTouches$.pageX;
+    // PageX for gesture that would trigger navigation back is negative. 
+    if (pageX < 0) {
+      if (timer) {
+        clearTimeout(timer);
+      }
+      justFinishedEdgeGestureFromLeft = true;
+      timer = setTimeout(() => justFinishedEdgeGestureFromLeft = false, 100);
+    }
+    expectingTouchend = false;
+  };
+  document.addEventListener('touchstart', handleTouchStart);
+  document.addEventListener('touchend', handleTouchEnd);
+};
+//# sourceMappingURL=edgeDragGestureMonitor.js.map
\ No newline at end of file
diff --git a/node_modules/@react-navigation/stack/lib/module/utils/edgeDragGestureMonitor.js.map b/node_modules/@react-navigation/stack/lib/module/utils/edgeDragGestureMonitor.js.map
new file mode 100644
index 0000000..681470c
--- /dev/null
+++ b/node_modules/@react-navigation/stack/lib/module/utils/edgeDragGestureMonitor.js.map
@@ -0,0 +1 @@
+{"version":3,"names":["isInitialized","justFinishedEdgeGestureFromLeft","expectingTouchend","getIsEdgeDragGesture","resetExpectingTouchend","maybeInitializeEdgeDragGestureMonitor","timer","handleTouchStart","handleTouchEnd","e","pageX","changedTouches","clearTimeout","setTimeout","document","addEventListener"],"sourceRoot":"../../../src","sources":["utils/edgeDragGestureMonitor.tsx"],"mappings":"AAAA,IAAIA,aAAa,GAAG,KAAK;AAEzB,IAAIC,+BAA+B,GAAG,KAAK;AAC3C,IAAIC,iBAAiB,GAAG,KAAK;;AAE7B;AACA,OAAO,MAAMC,oBAAoB,GAAG,MAAM;EACxC,OAAOD,iBAAiB,IAAID,+BAA+B;AAC7D,CAAC;;AAED;AACA,OAAO,MAAMG,sBAAsB,GAAG,MAAM;EAC1CF,iBAAiB,GAAG,KAAK;AAC3B,CAAC;;AAED;AACA,OAAO,MAAMG,qCAAqC,GAAG,MAAM;EACzD,IAAIL,aAAa,EAAE;IACjB;EACF;EACAA,aAAa,GAAG,IAAI;EAEpB,IAAIM,KAAoC;;EAExC;EACA;EACA,MAAMC,gBAAgB,GAAG,MAAM;IAC7BL,iBAAiB,GAAG,IAAI;EAC1B,CAAC;EAED,MAAMM,cAAc,GAAIC,CAAa,IAAK;IAAA;IACxC,MAAMC,KAAK,yBAAGD,CAAC,CAACE,cAAc,CAAC,CAAC,CAAC,uDAAnB,mBAAqBD,KAAK;IACxC;IACA,IAAIA,KAAK,GAAG,CAAC,EAAE;MACb,IAAIJ,KAAK,EAAE;QACTM,YAAY,CAACN,KAAK,CAAC;MACrB;MACAL,+BAA+B,GAAG,IAAI;MACtCK,KAAK,GAAGO,UAAU,CAAC,MAAOZ,+BAA+B,GAAG,KAAM,EAAE,GAAG,CAAC;IAC1E;IACAC,iBAAiB,GAAG,KAAK;EAC3B,CAAC;EAEDY,QAAQ,CAACC,gBAAgB,CAAC,YAAY,EAAER,gBAAgB,CAAC;EACzDO,QAAQ,CAACC,gBAAgB,CAAC,UAAU,EAAEP,cAAc,CAAC;AACvD,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@react-navigation/stack/lib/module/utils/edgeDragGestureMonitor.native.js b/node_modules/@react-navigation/stack/lib/module/utils/edgeDragGestureMonitor.native.js
new file mode 100644
index 0000000..ce5a466
--- /dev/null
+++ b/node_modules/@react-navigation/stack/lib/module/utils/edgeDragGestureMonitor.native.js
@@ -0,0 +1,6 @@
+// We don't need edgeDragGestureMonitor for native platforms.
+
+export const getIsEdgeDragGesture = () => false;
+export const resetExpectingTouchendWithDelay = () => {};
+export const maybeInitializeEdgeDragGestureMonitor = () => {};
+//# sourceMappingURL=edgeDragGestureMonitor.native.js.map
\ No newline at end of file
diff --git a/node_modules/@react-navigation/stack/lib/module/utils/edgeDragGestureMonitor.native.js.map b/node_modules/@react-navigation/stack/lib/module/utils/edgeDragGestureMonitor.native.js.map
new file mode 100644
index 0000000..a88c2ef
--- /dev/null
+++ b/node_modules/@react-navigation/stack/lib/module/utils/edgeDragGestureMonitor.native.js.map
@@ -0,0 +1 @@
+{"version":3,"names":["getIsEdgeDragGesture","resetExpectingTouchend","maybeInitializeEdgeDragGestureMonitor"],"sourceRoot":"../../../src","sources":["utils/edgeDragGestureMonitor.native.tsx"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,oBAAoB,GAAG,MAAM,KAAK;AAC/C,OAAO,MAAMC,sBAAsB,GAAG,MAAM,CAAC,CAAC;AAC9C,OAAO,MAAMC,qCAAqC,GAAG,MAAM,CAAC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@react-navigation/stack/lib/module/views/Stack/Card.js b/node_modules/@react-navigation/stack/lib/module/views/Stack/Card.js
index 548ba79..4cbbfa1 100644
--- a/node_modules/@react-navigation/stack/lib/module/views/Stack/Card.js
+++ b/node_modules/@react-navigation/stack/lib/module/views/Stack/Card.js
@@ -4,6 +4,7 @@ import * as React from 'react';
 import { Animated, InteractionManager, Platform, StyleSheet, View } from 'react-native';
 import { forModalPresentationIOS } from '../../TransitionConfigs/CardStyleInterpolators';
 import CardAnimationContext from '../../utils/CardAnimationContext';
+import { getIsEdgeDragGesture, resetExpectingTouchendWithDelay } from '../../utils/edgeDragGestureMonitor';
 import getDistanceForDirection from '../../utils/getDistanceForDirection';
 import getInvertedMultiplier from '../../utils/getInvertedMultiplier';
 import memoize from '../../utils/memoize';
@@ -121,6 +122,8 @@ export default class Card extends React.Component {
     });
     animation(gesture, {
       ...spec.config,
+      // Detecting if the user used swipe gesture on iOS safari to trigger navigation in the browser history.
+      duration: getIsEdgeDragGesture() ? 0 : undefined,
       velocity,
       toValue,
       useNativeDriver,
@@ -131,6 +134,8 @@ export default class Card extends React.Component {
       } = _ref3;
       this.handleEndInteraction();
       clearTimeout(this.pendingGestureCallback);
+      // We need to reset edgeDragGestureMonitor manualy because of broken events on iOS safari.
+      resetExpectingTouchendWithDelay()
       if (finished) {
         if (closing) {
           onClose();
diff --git a/node_modules/@react-navigation/stack/lib/module/views/Stack/CardStack.js b/node_modules/@react-navigation/stack/lib/module/views/Stack/CardStack.js
index 95e6871..a7897d7 100644
--- a/node_modules/@react-navigation/stack/lib/module/views/Stack/CardStack.js
+++ b/node_modules/@react-navigation/stack/lib/module/views/Stack/CardStack.js
@@ -4,6 +4,7 @@ import * as React from 'react';
 import { Animated, Platform, StyleSheet } from 'react-native';
 import { forModalPresentationIOS, forNoAnimation as forNoAnimationCard } from '../../TransitionConfigs/CardStyleInterpolators';
 import { DefaultTransition, ModalFadeTransition, ModalTransition } from '../../TransitionConfigs/TransitionPresets';
+import { maybeInitializeEdgeDragGestureMonitor } from '../../utils/edgeDragGestureMonitor';
 import findLastIndex from '../../utils/findLastIndex';
 import getDistanceForDirection from '../../utils/getDistanceForDirection';
 import { MaybeScreen, MaybeScreenContainer } from '../Screens';
@@ -166,6 +167,9 @@ export default class CardStack extends React.Component {
   }
   constructor(props) {
     super(props);
+
+    // Gesture monitor is only needed on iOS safari to detect if the user performed edge swipe gesture to to navigate in the browser history.
+    maybeInitializeEdgeDragGestureMonitor()
     this.state = {
       routes: [],
       scenes: [],
